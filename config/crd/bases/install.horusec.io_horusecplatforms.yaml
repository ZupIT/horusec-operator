# Copyright 2021 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: horusecplatforms.install.horusec.io
spec:
  group: install.horusec.io
  names:
    kind: HorusecPlatform
    listKind: HorusecPlatformList
    plural: horusecplatforms
    shortNames:
    - horus
    singular: horusecplatform
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The status of the platform installation
      jsonPath: .status.state
      name: Status
      type: string
    - description: It indicates the reason for a condition error
      jsonPath: .status.conditions[?(@.status=='False')].reason
      name: Reason
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v2alpha1
    schema:
      openAPIV3Schema:
        description: HorusecPlatform is the Schema for the horusecs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HorusecPlatformSpec defines the desired state of HorusecPlatform
            properties:
              components:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                properties:
                  analytic:
                    properties:
                      container:
                        properties:
                          image:
                            properties:
                              pullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                enum:
                                - Always
                                - Never
                                - IfNotPresent
                                type: string
                              pullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              registry:
                                type: string
                              repository:
                                type: string
                              tag:
                                type: string
                            type: object
                          livenessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          readinessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              enabled:
                                type: boolean
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      database:
                        properties:
                          host:
                            type: string
                          logMode:
                            type: boolean
                          migration:
                            properties:
                              image:
                                properties:
                                  pullPolicy:
                                    description: PullPolicy describes a policy for
                                      if/when to pull a container image
                                    enum:
                                    - Always
                                    - Never
                                    - IfNotPresent
                                    type: string
                                  pullSecrets:
                                    items:
                                      description: LocalObjectReference contains enough
                                        information to let you locate the referenced
                                        object inside the same namespace.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    type: array
                                  registry:
                                    type: string
                                  repository:
                                    type: string
                                  tag:
                                    type: string
                                type: object
                            type: object
                          name:
                            type: string
                          password:
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          port:
                            type: integer
                          sslMode:
                            type: boolean
                          user:
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        type: object
                      extraEnv:
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                          host:
                            type: string
                          path:
                            type: string
                          tls:
                            properties:
                              secretName:
                                type: string
                            type: object
                        type: object
                      name:
                        type: string
                      pod:
                        properties:
                          autoscaling:
                            properties:
                              enabled:
                                type: boolean
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                              targetCPU:
                                format: int32
                                type: integer
                              targetMemory:
                                format: int32
                                type: integer
                            type: object
                          securityContext:
                            properties:
                              enabled:
                                type: boolean
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      port:
                        properties:
                          grpc:
                            type: integer
                          http:
                            type: integer
                        type: object
                      replicaCount:
                        format: int32
                        type: integer
                    type: object
                  api:
                    properties:
                      container:
                        properties:
                          image:
                            properties:
                              pullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                enum:
                                - Always
                                - Never
                                - IfNotPresent
                                type: string
                              pullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              registry:
                                type: string
                              repository:
                                type: string
                              tag:
                                type: string
                            type: object
                          livenessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          readinessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              enabled:
                                type: boolean
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      extraEnv:
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                          host:
                            type: string
                          path:
                            type: string
                          tls:
                            properties:
                              secretName:
                                type: string
                            type: object
                        type: object
                      name:
                        type: string
                      pod:
                        properties:
                          autoscaling:
                            properties:
                              enabled:
                                type: boolean
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                              targetCPU:
                                format: int32
                                type: integer
                              targetMemory:
                                format: int32
                                type: integer
                            type: object
                          securityContext:
                            properties:
                              enabled:
                                type: boolean
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      port:
                        properties:
                          grpc:
                            type: integer
                          http:
                            type: integer
                        type: object
                      replicaCount:
                        format: int32
                        type: integer
                    type: object
                  auth:
                    properties:
                      container:
                        properties:
                          image:
                            properties:
                              pullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                enum:
                                - Always
                                - Never
                                - IfNotPresent
                                type: string
                              pullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              registry:
                                type: string
                              repository:
                                type: string
                              tag:
                                type: string
                            type: object
                          livenessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          readinessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              enabled:
                                type: boolean
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      extraEnv:
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                          host:
                            type: string
                          path:
                            type: string
                          tls:
                            properties:
                              secretName:
                                type: string
                            type: object
                        type: object
                      name:
                        type: string
                      pod:
                        properties:
                          autoscaling:
                            properties:
                              enabled:
                                type: boolean
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                              targetCPU:
                                format: int32
                                type: integer
                              targetMemory:
                                format: int32
                                type: integer
                            type: object
                          securityContext:
                            properties:
                              enabled:
                                type: boolean
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      port:
                        properties:
                          grpc:
                            type: integer
                          http:
                            type: integer
                        type: object
                      replicaCount:
                        format: int32
                        type: integer
                      type:
                        type: string
                      user:
                        properties:
                          administrator:
                            properties:
                              email:
                                type: string
                              enabled:
                                type: boolean
                              password:
                                properties:
                                  secretKeyRef:
                                    description: SecretKeySelector selects a key of
                                      a Secret.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              user:
                                properties:
                                  secretKeyRef:
                                    description: SecretKeySelector selects a key of
                                      a Secret.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            type: object
                          default:
                            properties:
                              email:
                                type: string
                              enabled:
                                type: boolean
                              password:
                                properties:
                                  secretKeyRef:
                                    description: SecretKeySelector selects a key of
                                      a Secret.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              user:
                                properties:
                                  secretKeyRef:
                                    description: SecretKeySelector selects a key of
                                      a Secret.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            type: object
                        type: object
                    type: object
                  core:
                    properties:
                      container:
                        properties:
                          image:
                            properties:
                              pullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                enum:
                                - Always
                                - Never
                                - IfNotPresent
                                type: string
                              pullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              registry:
                                type: string
                              repository:
                                type: string
                              tag:
                                type: string
                            type: object
                          livenessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          readinessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              enabled:
                                type: boolean
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      extraEnv:
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                          host:
                            type: string
                          path:
                            type: string
                          tls:
                            properties:
                              secretName:
                                type: string
                            type: object
                        type: object
                      name:
                        type: string
                      pod:
                        properties:
                          autoscaling:
                            properties:
                              enabled:
                                type: boolean
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                              targetCPU:
                                format: int32
                                type: integer
                              targetMemory:
                                format: int32
                                type: integer
                            type: object
                          securityContext:
                            properties:
                              enabled:
                                type: boolean
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      port:
                        properties:
                          grpc:
                            type: integer
                          http:
                            type: integer
                        type: object
                      replicaCount:
                        format: int32
                        type: integer
                    type: object
                  manager:
                    properties:
                      container:
                        properties:
                          image:
                            properties:
                              pullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                enum:
                                - Always
                                - Never
                                - IfNotPresent
                                type: string
                              pullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              registry:
                                type: string
                              repository:
                                type: string
                              tag:
                                type: string
                            type: object
                          livenessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          readinessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              enabled:
                                type: boolean
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      extraEnv:
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                          host:
                            type: string
                          path:
                            type: string
                          tls:
                            properties:
                              secretName:
                                type: string
                            type: object
                        type: object
                      name:
                        type: string
                      pod:
                        properties:
                          autoscaling:
                            properties:
                              enabled:
                                type: boolean
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                              targetCPU:
                                format: int32
                                type: integer
                              targetMemory:
                                format: int32
                                type: integer
                            type: object
                          securityContext:
                            properties:
                              enabled:
                                type: boolean
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      port:
                        properties:
                          grpc:
                            type: integer
                          http:
                            type: integer
                        type: object
                      replicaCount:
                        format: int32
                        type: integer
                    type: object
                  messages:
                    properties:
                      container:
                        properties:
                          image:
                            properties:
                              pullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                enum:
                                - Always
                                - Never
                                - IfNotPresent
                                type: string
                              pullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              registry:
                                type: string
                              repository:
                                type: string
                              tag:
                                type: string
                            type: object
                          livenessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          readinessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              enabled:
                                type: boolean
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      emailFrom:
                        type: string
                      enabled:
                        type: boolean
                      extraEnv:
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                          host:
                            type: string
                          path:
                            type: string
                          tls:
                            properties:
                              secretName:
                                type: string
                            type: object
                        type: object
                      mailServer:
                        properties:
                          host:
                            type: string
                          password:
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          port:
                            type: integer
                          user:
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        type: object
                      name:
                        type: string
                      pod:
                        properties:
                          autoscaling:
                            properties:
                              enabled:
                                type: boolean
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                              targetCPU:
                                format: int32
                                type: integer
                              targetMemory:
                                format: int32
                                type: integer
                            type: object
                          securityContext:
                            properties:
                              enabled:
                                type: boolean
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      port:
                        properties:
                          grpc:
                            type: integer
                          http:
                            type: integer
                        type: object
                      replicaCount:
                        format: int32
                        type: integer
                    type: object
                  vulnerability:
                    properties:
                      container:
                        properties:
                          image:
                            properties:
                              pullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                enum:
                                - Always
                                - Never
                                - IfNotPresent
                                type: string
                              pullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              registry:
                                type: string
                              repository:
                                type: string
                              tag:
                                type: string
                            type: object
                          livenessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          readinessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              enabled:
                                type: boolean
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      extraEnv:
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                          host:
                            type: string
                          path:
                            type: string
                          tls:
                            properties:
                              secretName:
                                type: string
                            type: object
                        type: object
                      name:
                        type: string
                      pod:
                        properties:
                          autoscaling:
                            properties:
                              enabled:
                                type: boolean
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                              targetCPU:
                                format: int32
                                type: integer
                              targetMemory:
                                format: int32
                                type: integer
                            type: object
                          securityContext:
                            properties:
                              enabled:
                                type: boolean
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      port:
                        properties:
                          grpc:
                            type: integer
                          http:
                            type: integer
                        type: object
                      replicaCount:
                        format: int32
                        type: integer
                    type: object
                  webhook:
                    properties:
                      container:
                        properties:
                          image:
                            properties:
                              pullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                enum:
                                - Always
                                - Never
                                - IfNotPresent
                                type: string
                              pullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              registry:
                                type: string
                              repository:
                                type: string
                              tag:
                                type: string
                            type: object
                          livenessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          readinessProbe:
                            description: Probe describes a health check to be performed
                              against a container to determine whether it is alive
                              or ready to receive traffic.
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is an alpha field and requires enabling ProbeTerminationGracePeriod
                                  feature gate.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              enabled:
                                type: boolean
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      extraEnv:
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                          host:
                            type: string
                          path:
                            type: string
                          tls:
                            properties:
                              secretName:
                                type: string
                            type: object
                        type: object
                      name:
                        type: string
                      pod:
                        properties:
                          autoscaling:
                            properties:
                              enabled:
                                type: boolean
                              maxReplicas:
                                format: int32
                                type: integer
                              minReplicas:
                                format: int32
                                type: integer
                              targetCPU:
                                format: int32
                                type: integer
                              targetMemory:
                                format: int32
                                type: integer
                            type: object
                          securityContext:
                            properties:
                              enabled:
                                type: boolean
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      port:
                        properties:
                          grpc:
                            type: integer
                          http:
                            type: integer
                        type: object
                      replicaCount:
                        format: int32
                        type: integer
                      timeout:
                        type: integer
                    type: object
                type: object
              global:
                properties:
                  broker:
                    properties:
                      host:
                        type: string
                      password:
                        properties:
                          secretKeyRef:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      port:
                        type: integer
                      user:
                        properties:
                          secretKeyRef:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    type: object
                  database:
                    properties:
                      host:
                        type: string
                      logMode:
                        type: boolean
                      migration:
                        properties:
                          image:
                            properties:
                              pullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                enum:
                                - Always
                                - Never
                                - IfNotPresent
                                type: string
                              pullSecrets:
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                type: array
                              registry:
                                type: string
                              repository:
                                type: string
                              tag:
                                type: string
                            type: object
                        type: object
                      name:
                        type: string
                      password:
                        properties:
                          secretKeyRef:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      port:
                        type: integer
                      sslMode:
                        type: boolean
                      user:
                        properties:
                          secretKeyRef:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    type: object
                  grpcUseCerts:
                    type: boolean
                  jwt:
                    properties:
                      secretKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                  keycloak:
                    properties:
                      clients:
                        properties:
                          confidential:
                            properties:
                              id:
                                type: string
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          public:
                            properties:
                              id:
                                type: string
                            type: object
                        type: object
                      internalURL:
                        type: string
                      otp:
                        type: boolean
                      publicURL:
                        type: string
                      realm:
                        type: string
                    type: object
                  ldap:
                    properties:
                      adminGroup:
                        type: string
                      base:
                        type: string
                      bindDn:
                        type: string
                      bindPassword:
                        properties:
                          secretKeyRef:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      host:
                        type: string
                      insecureSkipVerify:
                        type: boolean
                      port:
                        type: integer
                      skipTls:
                        type: boolean
                      useSsl:
                        type: boolean
                      userFilter:
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: HorusecPlatformStatus defines the observed state of HorusecPlatform
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                type: string
            required:
            - conditions
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
