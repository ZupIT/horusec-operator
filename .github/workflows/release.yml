# Copyright 2021 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release type: M (Major); m (Minor); p (Path)'
        required: true
      horusecPlatformVersion:
        description: "Version of horusec-platform for this release. Ex: v0.0.0"
        required: true

permissions: read-all
jobs:
  Release:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    env:
      COSIGN_KEY_LOCATION: "/tmp/cosign.key" #private key used to sing the artefacts and images location.

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.HORUSEC_PUSH_TOKEN }}

      - name: Git config
        run: |
          git config --global user.email "horusec@zup.com.br"
          git config --global user.name "horusec"

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Set up nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Cosign Installer
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.2.0'

      # This step creates a file containing the private key used to sing the release artefacts and images.
      - name: Install cosign private key
        run: 'echo "$COSIGN_KEY" > $COSIGN_KEY_LOCATION'
        shell: bash
        env:
          COSIGN_KEY: ${{secrets.COSIGN_KEY}}

      # Run a script contained in the devkit repository that gets the latest release version and create an output
      # containing the next versions.
      - name: Version increment
        id: updated-version
        run: |
          curl https://raw.githubusercontent.com/ZupIT/horusec-devkit/main/scripts/semver.sh -o /tmp/semver.sh
          chmod +x /tmp/semver.sh
          /tmp/semver.sh -${{ github.event.inputs.releaseType }} ${{ github.event.repository.full_name }}

      # Creates a tag with the next version created during the last step, but still don't publish it.
      - name: Create tag
        run: git tag ${{ steps.updated-version.outputs.version }} && sleep 10

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_PWD: ${{ secrets.COSIGN_PWD }}
          GORELEASER_CURRENT_TAG: ${{ steps.updated-version.outputs.version }}

      # This step updates the defaults.json to the platform version passed in the workflow input for all microservices.
      # The README.md and kustomization.yaml also are updated to match the new operator version that ir being released.
      - name: Update versioning files
        run: |
          npm install -g json
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.components.analytic.container.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.components.analytic.database.migration.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.components.api.container.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.components.auth.container.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.components.core.container.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.components.manager.container.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.components.messages.container.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.components.vulnerability.container.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.components.webhook.container.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          json -I -f api/v2alpha1/horusec_platform_defaults.json -e 'this.global.database.migration.image.tag="${{ github.event.inputs.horusecPlatformVersion }}"'
          find . -type f -not -path "./.git/*" -not -path "./go.mod" -not -path "./go.sum" | xargs sed -i "s/${{ steps.updated-version.outputs.actualVersion }}/${{ steps.updated-version.outputs.version }}/g"

      # The changes made in the last step are committed to the branch that the workflow was triggered, this commit is not
      # going to trigger any workflow cause the skip ci in the commit message.
      - name: Commit changes
        uses: EndBug/add-and-commit@v7.4.0
        with:
          push: true
          signoff: true
          author_name: horusec
          author_email: horusec@zup.com.br
          committer_name: horusec
          committer_email: horusec@zup.com.br
          message: "versioning:release - [skip ci] automatic commit updating versioning files"

      # Creates a new branch when it's a minor or major release, shouldn't trigger when it's a patch release, cause the
      # branch already exists, and only needs to be updated.
      - name: Create release branch
        if: github.event.inputs.releaseType != 'p'
        run: |
          git branch ${{ steps.updated-version.outputs.releaseBranchName }}
          git push origin ${{ steps.updated-version.outputs.releaseBranchName }}

      # This step gets the sha of last commit made, witch is the updating versioning files commit, after that creates a
      # branch from the origin main and cherry pick this commit on it. This process need to occur only when the release
      # workflow is started from a branch that isn't the main branch, for example a release branch.
      # When the workflow it's triggered to run on main, the commit it's going to be made directly to the main branch.
      - name: Cherry pick
        if: github.ref != 'refs/heads/main'
        id: cherry-pick
        run: |
          CHERRY_PICK_SHA=$(git log -1 --format="%H")
          echo "::set-output name=branch::${CHERRY_PICK_SHA}"
          git checkout -b "update-release-files-$CHERRY_PICK_SHA" origin/main
          git cherry-pick $CHERRY_PICK_SHA -x --strategy-option theirs
          git push -u origin update-release-files-$CHERRY_PICK_SHA

      # This step utilizes an action to create a pull request with the branch that was cherry picked on the last step
      # into the main branch. As the last commit, this also needs to run only when the release workflow is started from a
      # branch that isn't the main branch. Others workflows should be skipped cause of the skip ci in the pull request title.
      - name: Create Pull Request
        if: github.ref != 'refs/heads/main'
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "update-release-files-${{ steps.cherry-pick.outputs.branch }}"
          destination_branch: "main"
          pr_title: "versioning:release - [skip ci] automatic pull request updating versioning files"
          pr_body: "This is a automatic pull request that contains changes to files that need to be updated with the new release version. Where the commit ${{ steps.cherry-pick.outputs.branch }} was cherry picked from the release branch, which already contains all the necessary changes."
          github_token: ${{ secrets.HORUSEC_PUSH_TOKEN }}
