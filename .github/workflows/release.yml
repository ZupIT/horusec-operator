# Copyright 2021 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  docker:
    name: "Publish a new release"
    if: github.event.pull_request.merged == true && (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix/'))
    runs-on: ubuntu-latest
    steps:
      - name: "Extract version from branch name (for release branches)"
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: "Extract version from branch name (for hotfix branches)"
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: "Docker meta"
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: |
            horuszup/horusec-operator
          tags: |
            type=semver,prefix=v,pattern={{version}},value=${{ env.RELEASE_VERSION }}
            type=semver,prefix=v,pattern={{major}}.{{minor}},value=${{ env.RELEASE_VERSION }}
            type=semver,prefix=v,pattern={{major}},value=${{ env.RELEASE_VERSION }}

      - name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build and push"
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./deployments/dockerfiles/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: "Write Docker notes"
        uses: actions/github-script@v5
        id: docker_notes
        env:
          DOCKER_TAGS: ${{ steps.meta.outputs.tags }}
        with:
          result-encoding: string
          script: |
            const notes = ["## Docker images\n"];
            const {DOCKER_TAGS} = process.env;
            DOCKER_TAGS.split("\n")
                .map(image => image.trim())
                .filter(image => image.length > 0)
                .forEach(image => notes.push(`-   \`docker pull ${image}\``));
            return notes.join("\n");

      - name: "Create Release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commitish: ${{ github.event.pull_request.merge_commit_sha }}
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}
          body: ${{steps.docker_notes.outputs.result}}
          draft: false
          prerelease: false
